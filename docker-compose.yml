version: '3.8'

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: studyquiz
      POSTGRES_PASSWORD: studyquiz123
      POSTGRES_DB: studyquiz
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/migrations:/docker-entrypoint-initdb.d
    networks:
      - studyquiz-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U studyquiz"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
      
    environment:
      - NODE_ENV=development
      - PORT=3001
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=studyquiz
      - DB_USER=studyquiz
      - DB_PASS=studyquiz123
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - studyquiz-network
    command: npm run dev

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:3001/api
      - CHOKIDAR_USEPOLLING=true
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - studyquiz-network
    command: npm start

volumes:
  postgres_data:

networks:
  studyquiz-network:
    driver: bridge